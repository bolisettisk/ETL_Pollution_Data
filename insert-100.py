import time
Start_Time_Main = time.time()
import csv
import sys

# Defining prerequisites
source_filename = "clean.csv"
target_filename = "insert-100.sql"
delimiter = ";"

row_count = 0
add_nulls = lambda value : value or "Null" # function to convert missing values to Nulls

# Generating an optional query to create the Reading table
Create_Reading_100_Query = """/* PLEASE COMMENT THIS SECTION BELOW TO ADD ROWS TO THE EXISTING READING TABLE GENERATED BY populate.py */"""+"""\n"""+""" """*10+"""DROP TABLE IF EXISTS `Reading`;"""+"""\n"""+""" """*10+"""CREATE TABLE IF NOT EXISTS `Reading` (
        """+""" """*10+"""`MeasurementID` INT NOT NULL AUTO_INCREMENT,`Date` DATE NULL,`Time` TIME NULL,`Time Offset` TIME NULL,
        """+""" """*10+"""`NOx` DECIMAL(14,8) NULL,`NO2` DECIMAL(14,8) NULL,`NO` DECIMAL(14,8) NULL,`PM10` DECIMAL(14,8) NULL,
        """+""" """*10+"""`NVPM10` DECIMAL(14,8) NULL,`VPM10` DECIMAL(14,8) NULL,`NVPM2.5` DECIMAL(14,8) NULL,`PM2.5` DECIMAL(14,8) NULL,
        """+""" """*10+"""`VPM2.5` DECIMAL(14,8) NULL,`CO` DECIMAL(14,8) NULL,`O3` DECIMAL(14,8) NULL,`SO2` DECIMAL(14,8) NULL,
        """+""" """*10+"""`Temperature` DECIMAL(14,8) NULL,`RH` DECIMAL(14,8) NULL,`Air Pressure` DECIMAL(14,8) NULL,
        """+""" """*10+"""`DateStart` DATE NULL,`TimeStart` TIME NULL,`TimeStart Offset` TIME NULL,
        """+""" """*10+"""`DateEnd` DATE NULL,`TimeEnd` TIME NULL,`TimeEnd Offset` TIME NULL,
        """+""" """*10+"""`Current` VARCHAR(6) NULL,`Instrument Type` VARCHAR(128) NULL,`SiteID` INT NOT NULL,
        """+""" """*10+"""PRIMARY KEY (`MeasurementID`),
        """+""" """*10+"""INDEX `fk_Reading_Site_idx` (`SiteID` ASC),
        """+""" """*10+"""CONSTRAINT `fk_Reading_Site`
        """+""" """*10+"""FOREIGN KEY (`SiteID`)
        """+""" """*10+"""REFERENCES `Site` (`SiteID`)
        """+""" """*10+"""ON DELETE NO ACTION
        """+""" """*10+"""ON UPDATE NO ACTION)
    """+""" """*10+"""ENGINE = InnoDB; \n/* PLEASE COMMENT THIS SECTION ABOVE TO ADD ROWS TO THE EXISTING READING TABLE GENERATED BY populate.py */"""
# Query to insert values into the Reading table
Insert_reading_100_Values_Query = "INSERT INTO `Reading` VALUES {};"

Reading_Column_Indexes = list(range(0,6,1))+list(range(7,19,1))+list(range(22,30,1))+[6] # Extracting the indexes of the values to be inserted into the Reading table

try: 
    with open(source_filename,"r") as csv_data: # Opening the input data file 
        for row in csv.reader(csv_data,delimiter=delimiter):
            if row_count > 100: # Inserting a break point to stop after inserting 100 entries
                break 
            if row_count == 0: # Creating an empty target file when row count = 0. This file is opened using the append method for subsequent lines
                try:
                    with open(target_filename,"w") as insert_100_object:
                        insert_100_object.write(Create_Reading_100_Query) # Inserting the optional query to create the Reading table
                        row_count += 1
                except PermissionError as err:
                    print("Unable to write to the target directory: {}".format(target_filename),"\nPlease check the file has write access in case it already exists")
                    print(err)
                    sys.exit()
            else:
                Row = [add_nulls(value) for value in row] # Converting missing values to Nulls
                Clean_Row = [row_count]+[Row[i] for i in Reading_Column_Indexes] # row count is used to populate MeasurementID primary key. Remaining values are extracted from the each row read
                try:
                    with open(target_filename,"a") as insert_100_object: # Opeining the target file with append access
                        insert_100_values = Insert_reading_100_Values_Query.format(tuple(Clean_Row)).replace("'Null'", "Null") # Fixing the problem of Nulls appearing in inverted quotations 
                        insert_100_object.write("\n") # Moving to the next line from the previous query
                        insert_100_object.write(insert_100_values) # Inserting the query to populate the Reading table with insert_100_values
                        row_count += 1
                except PermissionError as err:
                    print("Unable to write to the target directory: {}".format(target_filename),"\nPlease check the file has write access if it already exists")
                    print(err)
                    sys.exit()
except FileNotFoundError as err:
    print("No such file exists in the target directory: {}".format(source_filename),"\nPlease check the file name or make sure it exists the the target directory ")
    print(err)
    sys.exit()

print("--- %s seconds ---" % (time.time() - Start_Time_Main)) 



